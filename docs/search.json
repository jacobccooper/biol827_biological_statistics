[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "biol827_biological_statistics",
    "section": "",
    "text": "Preface\nWelcome to Biology 827 at the University of Nebraska at Kearney! Material in this class was designed by Drs. Greg Pec, Jayne Jonas, and Jacob C. Cooper for use in R.\nBy the end of this course, you should be able to:\nCourse learning objectives: By the end of this course, students will be able to: 1. Identify best practices for data management, including creation of metadata, to ensure the longevity of datasets. 2. Construct testable hypotheses about biological systems and identify appropriate experimental designs to statistically test those hypotheses. 3. Calculate descriptive statistics to examine the character of a dataset and evaluate statistical power. 4. Conduct and interpret results of standard statistical tests as appropriate for the experimental design used and data collected. 5. Apply statistical concepts in critically evaluating research conducted by others. 6. Communicate research results that are accurately, concisely, and straightforwardly supported by statistics.\nThis site will help you navigate different homework assignments to perform the necessary R tests.\nWelcome to class!\nDr. Jacob C. Cooper, BHS 321",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "module1.html",
    "href": "module1.html",
    "title": "1  Module 1",
    "section": "",
    "text": "2 Learning objectives:\nTo reinforce Module 1 learning objectives and gain familiarity with the R statistical framework by using RStudio to:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#installing-r-and-rstudio",
    "href": "module1.html#installing-r-and-rstudio",
    "title": "1  Module 1",
    "section": "3.1 Installing R and RStudio",
    "text": "3.1 Installing R and RStudio\nIf you have not already done so, install both of the following free software programs on your computer before beginning the problem set. If you are using a Mac OS, you may be prompted to also download and install XQuartz (also free).\n\nR – behind-the-scenes statistical brain - download from R directly\nRStudio Desktop - software we’ll use to run R - download from Posit\n\nOn your computer, create a folder dedicated to work done in R and that you will be able to use all semester. Note the file path to this folder, you will need it in this problem set. Please make sure that this folder is in your UNK OneDrive - this will back up your data in case anything happens, and make it easier to share files with professors and other students.\n\nA filepath is like an address your computer uses to organize and find all the information stored on your hard drive. Filepaths are defined within R to find where files are stored on your computer. Some filepaths will include ~ which refers to the “base directory” or “default directory” on a machine (for Linux-based operating systems). Examples of filepaths follow for the default Downloads folder on a machine:\n\n\n# Linux filepath\n\"~/Downloads/\"\n\n# Mac filepath\n\"~/Downloads/\"\n\n# Windows filepath\n\"C:\\\\Users\\\\[YOUR USER NAME]\\\\Downloads\"",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#important-notes",
    "href": "module1.html#important-notes",
    "title": "1  Module 1",
    "section": "3.2 Important notes",
    "text": "3.2 Important notes\n\n3.2.1 Notes on formatting\nThroughout these instruction documents, different formats will be used to denote what type of object or data we are talking about. For example, programs like R will be italicized, and things related to actual code or coding objects will be formatted like code. For example, if a dataset is talking about the number of birds and it has a column called “num_birds”, then I will make this clear by formatting it as num_birds. If we are talking about the mean of a dataset, I will use “mean”, but if I’m talking about the command it will be formatted as “mean”.\n\n\n3.2.2 Tab completing\nRStudio allows you to do “tab completion”. Tab completion is a method that helps prevent you from making mistakes, especially as related to formatting or spelling. For example, if I hit one quote within a coding region in R, RStudio will automatically complete the quotes and place the cursor in the middle. (This is also true for parentheses, brackets, etc.) Quotes, in R, indicates that you will be putting in a filepath. Thus, if I type \"~/Dow\" and hit tab, my computer will autocomplete to \"~/Downloads/\".\n\n\n3.2.3 File naming\nIt is often common for folks to use spaces in their file names, like bird data.csv. However, different coding languages, such as Bash and Python, see spaces as a break between commands. For example, where R might see bird data.csv as a single file name, Bash would interpret this as perform the command bird on the object data.csv. Thus, it is always better to use underscores or dashes instead, such as bird_data.csv.\n\n\n3.2.4 Taking notes in R\nWhen writing code, it is important to take notes and document each step of what you are doing. In R, anything written after a # character is ignored. Thus, anything written after a # can be used as notes. Compare the following outputs:\n\nmean(1:10)\n\n[1] 5.5\n\n\n\n# mean(1:10)\n\nAs we can see, the first format returned a value - the mean - whereas the second example did not run. Thus, we can annotate our code like so:\n\n# calculate the mean\nmean(1:10)\n\n[1] 5.5\n\n\nIf you want to write a lot of notes, enter #' before typing notes. Every time you hit enter, the next line will start with #'.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#getting-help-inside-r",
    "href": "module1.html#getting-help-inside-r",
    "title": "1  Module 1",
    "section": "3.3 Getting help inside R",
    "text": "3.3 Getting help inside R\nEvery function loaded into R has a documentation or help page. This is accessible within R by typing the function preceded by ?. For example, if I am not sure what the mean function does or how to use it, I would type ?mean, as shown below:\n\n?mean\n\nThis will return a window such as the following in the bottom right (plot) pane of RStudio. This is the R documentation page. You can scroll through to see argument explanations, examples of use, and information on how to cite that particular command.\nYou can also get citations as follows:\n\ncitation()\n\nTo cite R in publications use:\n\n  R Core Team (2024). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  &lt;https://www.R-project.org/&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2024},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#dataset-1",
    "href": "module1.html#dataset-1",
    "title": "1  Module 1",
    "section": "4.1 Dataset 1",
    "text": "4.1 Dataset 1\nA researcher was interested in the relationship between whether more hours in direct sunlight led to more freckles on the back of hands in humans. They found 10 people who volunteered to participate. Each participant (Subject) tracked how much sun exposure they had over the course of the summer (SunExp). At the end of the summer, they reported the total number of freckles on the backs of both hands (Freckles). Note that some of these filenames have spaces, as from previous classes; we are working on reformatting filenames to fit the best practices described above.\n\nBIOL827.01_Problem_Set_Data_1.csv",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#dataset-2",
    "href": "module1.html#dataset-2",
    "title": "1  Module 1",
    "section": "4.2 Dataset 2",
    "text": "4.2 Dataset 2\nAfter analyzing dataset 1, the researcher decided to conduct a follow-up study. This time they found 26 volunteers and asked each volunteer to sit in the sun for a specific number of hours every day for the entire summer. Thirteen participants were assigned to each sun exposure regime (SunExp): 1 or 3 hours per day (2 regimes x 13 participants per regime = 36 participants). At the end of the summer, the researcher counted the total number of freckles (Freckles) on the backs of both hands of each participant (Subject).\n\nBIOL827.01_Problem_Set_Data_2.csv",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#section-a.-set-a-working-directory",
    "href": "module1.html#section-a.-set-a-working-directory",
    "title": "1  Module 1",
    "section": "5.1 Section A. Set a working directory",
    "text": "5.1 Section A. Set a working directory\nThe working directory tells RStudio where to look for external files and to save files. This eliminates the need to code the entire file path each time a dataset is imported or an R file is saved.\n\nOpen R, you should have 4 panes.\n\n\nThe upper-left pane is the “Source” pane should be blank with ‘Untitled1’ at the top. This is where you will enter code.\n\nIf you do not have this pane, you can open it by going to: File &gt; New File &gt; R Script.\n\nThe “Console” pane (usually bottom left) is where the code and its associated output will be printed after being Run. (Running code is the same as executing the code and having it perform the specified actions).\nThe “Global Environment” pane (usually upper right) lists the objects in R’s working memory. Any time you import a dataset or write output to an object, it should be listed here.\nThe “Plots/Viewer” pane (usually bottom right) is where any graphs and help windows will be displayed.\n\n\n\n\nThe four panes that should appear when you first start RStudio. Note that the top left “Source” pane may be missing; see instructions on opening a new file to initiate this pane.\n\n\n\nIn the source pane, type the command setwd().\n\n\nIMPORTANT NOTES:\n\nR coding is case sensitive! Use tab completion!\nEach new command must begin on a new line.\nA single command can run onto multiple lines.\n\n\n\n## EXAMPLES\n## INCORRECT: two commands on single line\nmean(1:10) var(1:10)\n\n## CORRECT: Each command on a line\nmean(1:10)\nvar(1:10)\n\n## CORRECT: One command across multiple lines\nmean(1,2,3,4,5,\n     6,7,8,9,10)\n\n\nInside the parentheses, type the file path to your R folder in quotation marks.\n\n\nFormat of the filepath is operating system dependent. Mac and Linux use / to separate portions of the filepath and Windows often uses \\\\. If you are having issues, or two back-slashes (\\\\) in the path. If one doesn’t work, try the other. If both fail, follow these instructions to create a filepath on your computer.\nR reads a single backslash (\\) as an “escape” command, so you will receive an error. Escape commands are used frequently in coding languages; for example, & may indicate a joining of two objects but \\& denotes the character “&”.\nRemember, use Tab Complete! This will put the correct format for you.\n\n\n# Setting the working directory\n# Format is shown for Mac\nsetwd(\"~/Documents/BIOL827/\")\n\n\nClick “Run”, or place your cursor on the line and click ctrl+enter (Windows / Linux) or cmd+enter (Mac) to make the line run\n\n\nTo run only a portion of the code, highlight that section of code then Run.\n\n\nWe can also save the working directory as an object. We can do this as follows:\n\n\nfilepath &lt;- \"~/Desktop/BIOL827/\"\n\nfilepath\n\n[1] \"~/Desktop/BIOL827/\"\n\n\n\nAfter running both lines of code, you will see that filepath will appear in the top right pane. This is now in our memory! Every time we type the word filepath and have it run, it will print out \"~/Documents/BIOL827/\" or whatever the equivalent is on your machine.\n\n\nSee what is in the filepath folder. If you have saved both the datasets for this class into that folder, it should look similar to the following:\n\n\nlist.files(filepath)\n\n[1] \"BIOL827.01_Problem_Set_Data_1.csv\" \"BIOL827.01_Problem_Set_Data_2.csv\"\n\nWe can see a list of all files at the address designated by filepath. Using filepath ensures that our code will always work, and that we are not reliant on being in the correct working directory with setwd. This will become useful when using rmarkdown.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#section-b.-import-a-dataset",
    "href": "module1.html#section-b.-import-a-dataset",
    "title": "1  Module 1",
    "section": "5.2 Section B. Import a dataset",
    "text": "5.2 Section B. Import a dataset\n\nFirst, we need to tell RStudio a short name for the dataset we are importing. This is called an object name, such as was shown for filepath in step 9.\n\n\nThis object name will be used whenever we want R to do something with this dataset. Object names can be anything you choose, but should be short, descriptive, and a single string (no_spaces) of characters. The object name cannot begin with a numeral.\n\nI called it object “Data1”. If you used a different name, be sure to use the name you used in place of Data1 throughout the instructions.\n\nIn R, a “dataframe” is a set of variables arranged in columns with each unique variable in a single column and information associated with a sample unit in a single row. A data.frame is also a very specific object type in R that can be passed through to certain commands. The dataset we are importing is considered a data.frame.\n\n\nNext, type &lt;-. In R coding, these characters (&lt;-) mean “is created from”. I also remember as “put this value into this thing”.\nNow, we need to tell RStudio what data we want to import. Because the data is in a comma-separated values (*.csv) format, we need to use the function read.csv. Syntax for this code is: read.csv(\"filename.csv\", header = TRUE).\n\n\nR will look in the working directory to find the filename indicated. If the working directory has not been set as directed in Section A. Set a working directory, you will need to include the full filepath with the filename in quotations. There are several ways to do this, as shown below.\nThe option “header = TRUE” tells R that the first row in the *.csv file contains the name for each variable in the dataset.\nDon’t forget to use tab complete!\nWindows computers: If you are using RStudio on a Windows operating system, you may need to include another argument to ensure the *.csv file is read into RStudio correctly: read.csv(\"filename.csv\", header = TRUE, fileEncoding = \"UTF-8-BOM\")\n\n\nHighlight and run the code, or place your cursor on the line and hit ctrl+enter or cmd+enter. This code is telling RStudio to import data from the indicated *.csv file into RStudio using the first row of that file to name each variable (= column). RStudio will store the data as an object called Data1.\n\n\nWhenever we want to do something with this data, we will need to tell RStudio to use Data1.\n\n\n## Steps 10 through 13 shown here\nData1 &lt;- read.csv(\"~/Desktop/BIOL827/BIOL827.01_Problem_Set_Data_1.csv\")\n\n# view first few rows\nhead(Data1)\n\n   Subject     SunExp Freckles\n1    James  4.6000000        4\n2    Keiko  8.5166667       20\n3 Mauricio 14.3500000        3\n4   Sharon  6.4166667        9\n5    Sonia  8.9500000       13\n6  Apoorva  0.1333333       12\n\n\n\n# read the file, but use filepath\n# use \"paste0\" to combine things\n# paste0 means \"combine, no spaces\"\n# paste sometimes works with tab complete - not always!\n\nData1 &lt;- read.csv(paste0(filepath,\"BIOL827.01_Problem_Set_Data_1.csv\"))\n\n# view first few rows\nhead(Data1)\n\n   Subject     SunExp Freckles\n1    James  4.6000000        4\n2    Keiko  8.5166667       20\n3 Mauricio 14.3500000        3\n4   Sharon  6.4166667        9\n5    Sonia  8.9500000       13\n6  Apoorva  0.1333333       12\n\n\nWe can also view what kind of data this is in R:\n\n# str = structure\nstr(Data1)\n\n'data.frame':   10 obs. of  3 variables:\n $ Subject : chr  \"James\" \"Keiko\" \"Mauricio\" \"Sharon\" ...\n $ SunExp  : num  4.6 8.52 14.35 6.42 8.95 ...\n $ Freckles: int  4 20 3 9 13 12 14 12 7 6\n\n\nAs mentioned above, R has created a data.frame with these data with three columns imported: Subject, SunExp, and Freckles.\n\nView the imported dataset in RStudio by clicking on the object name from the list in the environment panel.\n\n\nThis will show the format and specific setup of the object in your R environment.\nDouble-clicking this object should open a new tab with a spreadsheet view of the dataset.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#section-c.-subset-a-dataframe",
    "href": "module1.html#section-c.-subset-a-dataframe",
    "title": "1  Module 1",
    "section": "5.3 Section C. Subset a dataframe",
    "text": "5.3 Section C. Subset a dataframe\nWhen working in R, we often want to analyze a subset of observations (= rows) in the data.frame. There are many ways to do this, for now we will use the subset() function to create subsets as new objects. The subset function is formatted like so:\nNew.dataframe &lt;- subset(dataframe, rows to keep, columns to keep)\nRows should be identified using criteria specified by a logical argument.\n\nThe logical argument should tell R which variable contains the criteria and values to keep. See examples in Section C.2. Subset observations only.\nIf criteria are only given for rows, a comma is not necessary after the criteria.\n\nThis will return all variables in the new subset. Variable names must be in quotations and exactly match the spelling and capitalization of the name as given in the dataframe. Use tab complete when possible, some functions allow for this within the function.\n\nMore than one column can be selected using select= and the list function c(\"variable 1\", \"variable 2\"). c stands for “concatenate” to combine things into a single object.\n\n\n# concatenation examples\nexample_1 &lt;- c(\"a\",\"b\")\nexample_2 &lt;- c(5,7)\n\nexample_1\n\n[1] \"a\" \"b\"\n\nexample_2\n\n[1] 5 7\n\n\n\nIf only subsetting columns and keeping all rows of data, two commas should be between the full data.frame name and column variable names so that the row portion of the function is empty. This tells R to keep all rows.\n\n\n5.3.0.1 Anatomy of an R command\nThere are three basic parts to an R command.\n\nObject: set of information (value, variable, dataset, model, etc.) R can work with\n&lt;-: separates the object and function; means “is created from”.\nFunction: tells R to do something.\n\nCommand:\nData1 &lt;- read.csv(\"BIOL827.01_Problem_Set_Data_1.csv\", header = TRUE)\nHow R reads the command:\nCreate a new object called Data1 by importing the .csv file into R. Use the first row of the .csv file to give a variable name to each column.\n\n\n5.3.1 Section C.1. Subset by columns\nCreate a new dataframe object containing all observations of the sun exposure variable (SunExp) only from existing dataframe Data1.\n\nBegin the command by providing a name of your choosing for the new dataframe to be created by subsetting Data1. For example, SunExp.Data1 since the new variable will contain only the sun exposure variable.\nOn the same line, enter SunExp.Data1 &lt;- subset(Data1, , \"SunExp\")\n\n\nsubset(): this calls the subset function; all arguments related to how we want to subset the dataframe must be made inside these parentheses.\nData1: this is the name of the existing dataframe with information from which the new data.frame will be made.\nTwo commas (with or without a space between): indicates we are not subsetting by rows. That is, all rows of data will be in our new data.frame.\nSunExp: this is the name of the variable in Data1 that we want to copy into the new data.frame.\n\n\n# subset data frame\nSunExp.Data1 &lt;- subset(Data1, , \"SunExp\")\n\n# view first few rows\nhead(SunExp.Data1)\n\n      SunExp\n1  4.6000000\n2  8.5166667\n3 14.3500000\n4  6.4166667\n5  8.9500000\n6  0.1333333\n\n\nAnother way to write this for annotation would be:\n\n# subset data frame\nSunExp.Data1 &lt;- subset(Data1, # data frame\n                       , # row filter condition\n                       \"SunExp\") # column filter condition\n\n# view first few rows\nhead(SunExp.Data1)\n\n      SunExp\n1  4.6000000\n2  8.5166667\n3 14.3500000\n4  6.4166667\n5  8.9500000\n6  0.1333333\n\n\n\nRun the above subset command.\nTo view contents of the new data.frame in the console panel, highlight or type the new dataframe name and click Run.\n\n\nQuickly and easily highlight a portion of a line by double-clicking on a word. Double clicking will highlight the object or command name only, which you can then run by clicking “Run” or using ctrl+enter or cmd+enter.\n\n\n\n5.3.2 Section C.2. Subset observations only\nCreate a different new data.frame from Data1. This new data.frame should contain all variables but only for participants with 20 or more freckles. Selecting a subset of rows requires a logical statement (i.e., criteria) to let R know which rows to copy to the new data.frame.\n\nBegin the command by providing an object name of your choosing for the new data.frame. For example, Freck20.Data since we want data from participants with 20 or more freckles in the new data.frame.\n\n\nRemember, object names cannot have spaces nor begin with a numeral.\n\n\nEnter the function &lt;- subset(Data1, Freckles &gt;= 20) after the object name.\n\n\nsubset(): this calls the subset function; all arguments related to how we want to subset the data.frame must be made inside these parentheses.\nData1: this is the name of the existing data.frame with information from which the new data.frame will be made.\nFreckles &gt;= 20: this is a logical argument. It tells R to look in variable Freckles and copy only rows for which the value of Freckles is 20 or greater to the new data.frame.\n\n\n# subset by rows\n# col argument not needed!\nFreck20.Data &lt;- subset(Data1, Freckles &gt;= 20)\n\nFreck20.Data\n\n  Subject   SunExp Freckles\n2   Keiko 8.516667       20\n\n\n\nHighlight and run the code, as above.\nTo view contents of this new dataframe in the console panel, highlight or type the new data.frame name and click Run.\n\n\n\n5.3.3 Section C.3. Subset by both variables and observations\nCreate a third new dataframe from Data1. This new dataframe should contain only the Subject and SunExp variables and only for participants with 20 or more freckles.\n\nBegin the command by providing an object name for the new dataframe.\nOn the same line, enter: &lt;-subset(Data1, Freckles &gt;= 20, select = c(\"Subject\", \"SunExp\")).\n\n\nsubset(), Data1, and Freckles &gt;= 20 are the same as described in Section C.2. Subset observations only.\nselect = c(\"Subject\",\"SunExp\"): this uses the list function c() to select the two variables, Subject and SunExp, that we want to copy into the new dataframe. Be sure the variable names are in quotations and spelled in the same case as in the Data1 dataframe.\n\n\nHighlight and run the command.\n\n\nFreck.var.obs.filter &lt;- subset(Data1, Freckles &gt;= 20,\n                               select = c(\"Subject\", \"SunExp\"))\n\n\nTo view contents of the new dataframe in the console panel, highlight or type the new dataframe name and click Run.\n\n\nFreck.var.obs.filter\n\n  Subject   SunExp\n2   Keiko 8.516667\n\n\n\nCompare the dataframes created in Section C.2. Subset observations only. and Section C.3. Subset by both variables and observations. Notice that the Freckles variable is in dataframe Freck20.Data1 created in Section C.2. Subset observations only, but not in dataframe SunExp.Freck20.Data1 created in Section C.3. Subset by both variables and observations because it was not included in the select argument in Step 23.\n\n28. Save your R script file before quitting by clicking the disk icon or by selecting File &gt; Save from the menu at the top of the screen.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#section-d.-create-frequency-histograms",
    "href": "module1.html#section-d.-create-frequency-histograms",
    "title": "1  Module 1",
    "section": "5.4 Section D. Create frequency histograms",
    "text": "5.4 Section D. Create frequency histograms\nCreate a frequency histogram for sun exposure and freckle variables from Data1 to evaluate the frequency distribution for each variable. Here, we will use the hist() function and its default settings to get familiar with the structure and content of histograms.\n\nEnter the function: hist(Data1$SunExp). This tells R to create a histogram from observations of the SunExp variable within the Data1 dataframe.\n\n\nhist(): calls the histogram plotting function; all arguments must be made inside these parentheses.\n\n\n\nData1: this is the name of the dataframe from which the histogram will be made.\n$: separates an object name from the variable name. The named variable must exist within the named object or you will receive an error from RStudio.\nSunExp: identifies the variable in Data1 to be used for the histogram. A variable with this name must exist within the dataframe identified.\n\n\nHighlight and run the code.\n\n\nhist(Data1$SunExp)\n\n\n\n\n\n\n\n\n\nRepeat step 28 replacing SunExp with Freckles to create a histogram for the Freckles variable within Data1.\n\nBasic operators in R\n\n+ add ^ or ** exponentiation\n- subtract\n&lt; Less than\n* multiply\n&lt;= Less than or equal to\n/ divide\n&gt; Greater than\n== equals\n&gt;= Greater than or equal to\n!= does not equal\nx|y x or y *see note below\n!x is not x\nx&y x and y *see note below\n*x|y and x&y: x and y can represent expressions. For example, SunExp == 1 & Freckles &gt;= 20 could be used to select only those observations meeting both criteria.\n\n\nHighlight and run the code.\nBoth histograms should now be available in the plots panel (lower right).\n\n\nTo navigate between histograms for Freckles and SunExp, click the arrows at the top of the plots panel.\nTo save graphs as an image file or copy them to paste into a Canvas quiz response, click Export (Figure 9, red arrow) and follow the corresponding prompts.\n\n\nSelf-assessment. Compare information displayed in each frequency histogram to the raw data for each variable in the Data1 dataframe (or by opening the .csv file outside of RStudio).\n\n\nLooking at the sun exposure variable in the dataframe, how many values between 0 and 5 does it contain?\nNow look at the histogram for sun exposure, what frequency is graphed for the 0-5 bin? How does they compare? Hint: they should be the same.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#points-in-dataset-1-identify-which-variable-is-the-response-variable-and-which-isthe-explanatory-variable-as-well-as-what-type-of-data-each-represents-categoricalnominal-categorical-ordinal-numeric-discrete-numeric-continuous.-in-canvas-therewill-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-dataassociated-with-each-of-the-following.",
    "href": "module1.html#points-in-dataset-1-identify-which-variable-is-the-response-variable-and-which-isthe-explanatory-variable-as-well-as-what-type-of-data-each-represents-categoricalnominal-categorical-ordinal-numeric-discrete-numeric-continuous.-in-canvas-therewill-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-dataassociated-with-each-of-the-following.",
    "title": "1  Module 1",
    "section": "6.1 1. (2 points) In Dataset 1, identify which variable is the response variable and which isthe explanatory variable as well as what type of data each represents (categoricalnominal, categorical ordinal, numeric discrete, numeric continuous). In Canvas, therewill be dropdowns for you to use to identify the type of variable and the type of dataassociated with each of the following.",
    "text": "6.1 1. (2 points) In Dataset 1, identify which variable is the response variable and which isthe explanatory variable as well as what type of data each represents (categoricalnominal, categorical ordinal, numeric discrete, numeric continuous). In Canvas, therewill be dropdowns for you to use to identify the type of variable and the type of dataassociated with each of the following.\n\n6.1.1 a. Sun exposure (SunExp)?\n\n\n6.1.2 b. Freckles (Freckles)?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#points-in-dataset-2-identify-which-variable-is-the-response-variable-and-which-is-the-explanatory-variable-as-well-as-what-type-of-data-each-represents-categorical-nominal-categorical-ordinal-numeric-discrete-numeric-continuous.-in-canvas-there-will-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-data-associated-with-each-of-the-following.",
    "href": "module1.html#points-in-dataset-2-identify-which-variable-is-the-response-variable-and-which-is-the-explanatory-variable-as-well-as-what-type-of-data-each-represents-categorical-nominal-categorical-ordinal-numeric-discrete-numeric-continuous.-in-canvas-there-will-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-data-associated-with-each-of-the-following.",
    "title": "1  Module 1",
    "section": "6.2 2. (2 points) In Dataset 2, identify which variable is the response variable and which is the explanatory variable as well as what type of data each represents (categorical nominal, categorical ordinal, numeric discrete, numeric continuous). In Canvas, there will be dropdowns for you to use to identify the type of variable and the type of data associated with each of the following.",
    "text": "6.2 2. (2 points) In Dataset 2, identify which variable is the response variable and which is the explanatory variable as well as what type of data each represents (categorical nominal, categorical ordinal, numeric discrete, numeric continuous). In Canvas, there will be dropdowns for you to use to identify the type of variable and the type of data associated with each of the following.\n\n6.2.1 a. Sun exposure (SunExp)?\n\n\n6.2.2 b. Freckles (Freckles)?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#points-based-on-descriptions-of-the-studies-associated-with-each-dataset-answer-the-following-questions.-in-canvas-there-will-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-data-associated-with-each-of-the-following.",
    "href": "module1.html#points-based-on-descriptions-of-the-studies-associated-with-each-dataset-answer-the-following-questions.-in-canvas-there-will-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-data-associated-with-each-of-the-following.",
    "title": "1  Module 1",
    "section": "6.3 3. (2 points) Based on descriptions of the studies associated with each dataset, answer the following questions. In Canvas, there will be dropdowns for you to use to identify the type of variable and the type of data associated with each of the following.",
    "text": "6.3 3. (2 points) Based on descriptions of the studies associated with each dataset, answer the following questions. In Canvas, there will be dropdowns for you to use to identify the type of variable and the type of data associated with each of the following.\n\n6.3.1 a. Was Dataset 1 associated with an observational or experimental study?\n\n\n6.3.2 b. Was Dataset 2 associated with an observational or experimental study?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#points-using-dataset-2-create-one-histogram-of-freckles-data-for-participants-exposed-to-1-hour-of-sun-daily-and-another-for-freckles-of-participants-exposed-to-3-hours-of-sun-daily.-you-will-be-asked-to-paste-screenshots-or-insert-images-of-both-histograms-in-canvas.",
    "href": "module1.html#points-using-dataset-2-create-one-histogram-of-freckles-data-for-participants-exposed-to-1-hour-of-sun-daily-and-another-for-freckles-of-participants-exposed-to-3-hours-of-sun-daily.-you-will-be-asked-to-paste-screenshots-or-insert-images-of-both-histograms-in-canvas.",
    "title": "1  Module 1",
    "section": "6.4 4. (6 points) Using Dataset 2, create one histogram of freckles data for participants exposed to 1 hour of sun daily and another for freckles of participants exposed to 3 hours of sun daily. You will be asked to paste screenshots or insert images of both histograms in Canvas.",
    "text": "6.4 4. (6 points) Using Dataset 2, create one histogram of freckles data for participants exposed to 1 hour of sun daily and another for freckles of participants exposed to 3 hours of sun daily. You will be asked to paste screenshots or insert images of both histograms in Canvas.\n\n6.4.1 a. To do this, you will first need to create a subset of each SunExp sample (1 hour subset, 3 hour subset). Then, create a histogram for each individually.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#points-describe-the-distribution-of-each-in-terms-of-skewness-positive-negative-nonenormal-or-unclear-and-kurtosis-positiveleptokurtic-negativeplatykurtic-or-neutralmesokurtic-or-unclear-in-canvas-there-will-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-data-associated-with-each-of-the-following.",
    "href": "module1.html#points-describe-the-distribution-of-each-in-terms-of-skewness-positive-negative-nonenormal-or-unclear-and-kurtosis-positiveleptokurtic-negativeplatykurtic-or-neutralmesokurtic-or-unclear-in-canvas-there-will-be-dropdowns-for-you-to-use-to-identify-the-type-of-variable-and-the-type-of-data-associated-with-each-of-the-following.",
    "title": "1  Module 1",
    "section": "6.5 5. (4 points) Describe the distribution of each in terms of skewness (positive, negative, none/normal, or unclear) and kurtosis (positive/leptokurtic, negative/platykurtic, or neutral/mesokurtic, or unclear)? In Canvas, there will be dropdowns for you to use to identify the type of variable and the type of data associated with each of the following.",
    "text": "6.5 5. (4 points) Describe the distribution of each in terms of skewness (positive, negative, none/normal, or unclear) and kurtosis (positive/leptokurtic, negative/platykurtic, or neutral/mesokurtic, or unclear)? In Canvas, there will be dropdowns for you to use to identify the type of variable and the type of data associated with each of the following.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module1.html#for-the-possibility-of-partial-credit-you-will-be-able-to-upload-a-document-showing-your-work-e.g.-r-code-and-output.",
    "href": "module1.html#for-the-possibility-of-partial-credit-you-will-be-able-to-upload-a-document-showing-your-work-e.g.-r-code-and-output.",
    "title": "1  Module 1",
    "section": "6.6 6. For the possibility of partial credit, you will be able to upload a document showing your work (e.g., R code and output).",
    "text": "6.6 6. For the possibility of partial credit, you will be able to upload a document showing your work (e.g., R code and output).\nSubmitting your work for the Modules 1 and 2 Problem Set Assignment: Copy-paste or type your responses or graphs into the corresponding question in the Problem Set Assignment page (a Canvas ‘quiz’). Questions in Canvas may be worded slightly differently than here, usually for brevity, but with the same meaning. If there is a discrepancy in what is being asked between this document and the question form in Canvas, answer based on what is asked in this document. Also, please let me know as soon as possible so I can get it fixed.\nAdditional resources for R:\nIf you get stuck performing tasks in R, please reach out to me. There is also a wealth of information, pointers, and discussion boards about R language and RStudio online. Performing an internet search often provides insight and may offer more immediate assistance. Here are a few (of many!) websites that tend to be reliable and helpful:\n\nRDocumentation\nR-bloggers\nStackoverflow\nSTHDA.com\nGitHub\n\nThe following sites are also sometimes useful:\n\nChatGPT\nReddit",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Module 1</span>"
    ]
  },
  {
    "objectID": "module2.html",
    "href": "module2.html",
    "title": "2  Module 2",
    "section": "",
    "text": "3 Learning objectives:\nTo continue gaining familiarity with the R statistical framework by using RStudio to:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#dataset",
    "href": "module2.html#dataset",
    "title": "2  Module 2",
    "section": "4.1 Dataset",
    "text": "4.1 Dataset\nA researcher was conducting an exercise physiology study. The research team wanted to know whether volunteers of different sexes (female, male, non-binary) differed in physical characteristics, especially Body Mass Index (BMI). For each volunteer, the research team recorded their weight (in kilograms, kg) and height (in meters, m) of each participant.\n\nBIOL827.02_Problem_Set_Data.csv",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#a.-calculate-descriptive-statistics",
    "href": "module2.html#a.-calculate-descriptive-statistics",
    "title": "2  Module 2",
    "section": "5.1 A. Calculate descriptive statistics",
    "text": "5.1 A. Calculate descriptive statistics\nDescriptive statistics refers to simple calculations that summarize or describe a given variable, such as the mean (i.e., average, \\(\\mu\\), \\(\\bar{x}\\)), measures of variation in the data (standard deviation [\\(\\sigma\\), \\(s\\)], variation, etc.), and spread (minimum, maximum, range, etc.). These values are also one of the tools we can use as part of quality assurance and quality control.\n\nTo calculate the mean of the Weight.kg variable over all sample units, use mean(Data$Weight.kg). This tells R to calculate the mean from observations of the Weight.kg variable within the Data dataframe.\n\n\nmean(): calls the mean function.\nData: this is the name of the dataframe in which the data to be averaged are stored.\n$: separates an object name from the variable name. The named variable must exist within the named object or you will receive an error from RStudio.\nWeight.kg: identifies the variable in Data from which the average is to be calculated. A variable with this name must exist within the dataframe identified.\n\n\n# view data file - first rows ONLY\nhead(Data)\n\n# A tibble: 6 × 4\n  Participant Sex    Weight.kg Height.m\n        &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1          16 Female      61.8     1.87\n2          20 Female      64.2     1.89\n3          29 Female      64.7     1.76\n4          28 Female      67.6     1.86\n5           5 Female      71.2     1.96\n6           7 Female      72.5     1.8 \n\n\n\nmean(Data$Weight.kg)\n\n[1] 78.929\n\n\nWe will need to round values for our assignments.\n\nround: rounds values to a certain number of decimal places. Format is round(Data, decimals).\n%&gt;%: “is passed through”. The answer from the previous command is put into the next command automatically, and does not need to be declared. This makes coding easier. round(mean(Data$Weight.kg), 2) is the same as mean(Data$Weight.kg) %&gt;% round(2). This helps make things easier to follow when lots of commands are used in a row.\n\n\n# round to significant figures\nmean(Data$Weight.kg) %&gt;% # get the mean\n  round(2) # round to two decimals\n\n[1] 78.93\n\n\n\nTo calculate the standard deviation of the Weight.kg variable over all sample units, use sd(Data$Weight.kg). The syntax is similar to the mean() function.\n\n\nsd(Data$Weight.kg)\n\n[1] 16.60132\n\n\n\n# round to two decimal places\nsd(Data$Weight.kg) %&gt;% \n  round(2)\n\n[1] 16.6",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#b.-install-an-r-add-on-package",
    "href": "module2.html#b.-install-an-r-add-on-package",
    "title": "2  Module 2",
    "section": "5.2 B. Install an R add-on package",
    "text": "5.2 B. Install an R add-on package\nAdd-on packages only need to be installed one time. They do not need to be installed each time you open RStudio, but packages do have to be activated each time you open RStudio. Packages only need to be re-installed when the package developer releases an updated version; you will usually receive a prompt in RStudio if/when a package needs to be reinstalled.\nThe add-on package pastecs contains a very handy function to create a large set of descriptive statistics all at once. There are other packages that also can calculate sets of descriptive statistics, but this is the best one I have found to date. Although there is a command-line function for installing packages, this generally only needs to be done once so I prefer to use the installation wizard rather than building it into my script.\n\nType the following into your R coding pane. DO NOT put this into your main coding document; your code will not run if it is constantly asked to install things.\nEnter the following text:\n\n\ninstall.packages(\"pastecs\", dependencies = TRUE)\n\n\nPackage must be in quotes \" \".\ndependencies = TRUE ensures any other needed packages are also installed.\n\n\nAfter running the code, you should see a lot of output in the code window. Don’t panic. It is installing a lot. You may be prompted to install extra things or create a new folder; just say “Yes”. See below for an example output from an re-install:\n\ntrying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/pastecs_1.4.2.tgz'\nContent type 'application/x-gzip' length 487644 bytes (476 KB)\n==================================================\ndownloaded 476 KB\n\n\nThe downloaded binary packages are in\n    /var/folders/gc/0jz_0k0j2qq75h6ynd6jtb_5xh27x8/T//Rtmp1kkunq/downloaded_packages\n\nAlternatively, you an go to the “Packages” tab in the plot pane (bottom right) and find pastecs there for installation.\n\n11. Whichever method is chosen, you can check installation (and find the citation!) by typing the following:\n\ncitation(\"pastecs\")\n\nTo cite package 'pastecs' in publications use:\n\n  Grosjean P, Ibanez F (2024). _pastecs: Package for Analysis of\n  Space-Time Ecological Series_. R package version 1.4.2,\n  &lt;https://CRAN.R-project.org/package=pastecs&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {pastecs: Package for Analysis of Space-Time Ecological Series},\n    author = {Philippe Grosjean and Frederic Ibanez},\n    year = {2024},\n    note = {R package version 1.4.2},\n    url = {https://CRAN.R-project.org/package=pastecs},\n  }",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#c.-activate-an-add-on-package",
    "href": "module2.html#c.-activate-an-add-on-package",
    "title": "2  Module 2",
    "section": "5.3 C. Activate an add-on package",
    "text": "5.3 C. Activate an add-on package\nAn add-on package must be installed before it can be activated (B. Install an R add-on package). Although installation only needs to be done once until a major update is made, you must activate each time you open RStudio.\n\nIn the source pane, run the code library(pastecs).\n\n\nlibrary(pastecs)\n\n\nAttaching package: 'pastecs'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    first, last\n\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\n\nNote there are masked warnings. This means that the computer has two commands with the same name for the same package. Imagine if you will the word “solar”. In English, this pertains to things related to the sun, but in Spanish this refers to the ground or land. Thus, the computer may assume which one is meant, but this could result in a nonsensical command. Thus, if you have a conflict, you can fix it by designating the package, in this case, English::solar and Spanish::solar. We will try to let you know if a conflict like this will arise!\n\nThat’s it! You’ve now got all the additional functions included in this package at your fingertips. So, let’s see what it can do!",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#d.-use-function-stat.desc-to-calculate-descriptive-statistics",
    "href": "module2.html#d.-use-function-stat.desc-to-calculate-descriptive-statistics",
    "title": "2  Module 2",
    "section": "5.4 D. Use function stat.desc to calculate descriptive statistics",
    "text": "5.4 D. Use function stat.desc to calculate descriptive statistics\nA useful function provided in the pastecs package is stat.desc() which can return a large set of descriptive statistics quickly and with ease.\n\n5.4.1 D.1. Commands on a single variable\n\nEnter an object.name &lt;- before your stat.desc command. The object name can be of your choosing, this is where output from the stat.desc() function will be stored.\n\n15. Enter and run the function stat.desc(Data$Weight.kg).\n\nstat.desc(): this calls the stat.desc function; all arguments must be made inside these parentheses.\nData: this is the name of the existing dataframe containing the variable to be described.\n$Weight.kg: indicates the variable to be summarized.\n\n\nweight_stats &lt;- stat.desc(Data$Weight.kg)\n\nprint(weight_stats)\n\n     nbr.val     nbr.null       nbr.na          min          max        range \n  30.0000000    0.0000000    0.0000000   51.3200000  118.3100000   66.9900000 \n         sum       median         mean      SE.mean CI.mean.0.95          var \n2367.8700000   73.6750000   78.9290000    3.0309730    6.1990358  275.6039197 \n     std.dev     coef.var \n  16.6013228    0.2103324 \n\n\nWithin stat.desc, there are multiple options. The defaults are:\n\nbasic = TRUE: Return basic statistics on dataset size? TRUE = Yes.\ndesc = TRUE: Return basic statistics describing the data themselves? TRUE = Yes.\nnorm = FALSE: Return normal distribution statistics related to the data? Things like skewness etc. FALSE = No.\np = 0.95: What confidence level should we use? Default is 95%.\nThis is based on code by Frédéric Ibanez & Philippe Grosjean; type ?stat.desc into your bottom left pane to learn more about it.\n\n\n\n\n\n\n\n\nAbbreviation\nMeaning\n\n\n\n\nnbr.val\nNumber of observations containing a number value.\n\n\nn\nSample size.\n\n\nmedian\nMedian value among all observations. Half of values are lower and half of values are higher than this value.\n\n\nnbr.null\nNumber of empty observations mean Mean value across all observations.\n\n\nnrb.na\nNumber of observations for which data were identified as missing (NA).\n\n\nse.mean\nStandard error relative to the mean across all observations. Interpret as mean \\(\\pm\\) se.mean.\n\n\nmin\nMinimum value across all observations.\n\n\nci.mean.0.95\n95% confidence interval relative to the mean across all observations (i.e., margin of error). Interpret as mean ci.mean.0.95.\n\n\nmax\nMaximum value across all observations.\n\n\nvar\nVariance across all observations.\n\n\nrange\nRange (maximum – minimum) of values across all observations.\n\n\nstd.dev\nStandard deviation relative to the mean across all observations. Interpret as mean \\(\\pm\\) st.dev.\n\n\nsum\nSum of values across all observations.\n\n\ncoef.var\nCoefficient of variation.\n\n\n\nKeep in mind that we also have a few different ways to define columns to be selected. For example:\n\nData$Participant\n\n [1] 16 20 29 28  5  7  1 14 13 22 26 30  9 24 11 15 19  4 23  8  3  6 27 25 21\n[26] 12 17 10  2 18\n\n\nAbove we have returned the data for a single column. But what about multiple columns?\n\nData %&gt;% \n  select(Participant, Sex) # column names\n\n# A tibble: 30 × 2\n   Participant Sex   \n         &lt;dbl&gt; &lt;chr&gt; \n 1          16 Female\n 2          20 Female\n 3          29 Female\n 4          28 Female\n 5           5 Female\n 6           7 Female\n 7           1 Female\n 8          14 Female\n 9          13 Female\n10          22 Female\n# ℹ 20 more rows\n\n\n\nData[ , c(\"Participant\", \"Sex\")]\n\n# A tibble: 30 × 2\n   Participant Sex   \n         &lt;dbl&gt; &lt;chr&gt; \n 1          16 Female\n 2          20 Female\n 3          29 Female\n 4          28 Female\n 5           5 Female\n 6           7 Female\n 7           1 Female\n 8          14 Female\n 9          13 Female\n10          22 Female\n# ℹ 20 more rows\n\n\nAs we can see above, both methods subset the data similarly.\n\nTo view contents of the object in the console panel, highlight or type the object name and click Run or hit CTRL + Enter (Linux, Windows) or CMD + ENTER (Mac).\n\n\nweight_stats\n\n     nbr.val     nbr.null       nbr.na          min          max        range \n  30.0000000    0.0000000    0.0000000   51.3200000  118.3100000   66.9900000 \n         sum       median         mean      SE.mean CI.mean.0.95          var \n2367.8700000   73.6750000   78.9290000    3.0309730    6.1990358  275.6039197 \n     std.dev     coef.var \n  16.6013228    0.2103324 \n\n\n\nRepeat steps 17 through 20 to run the stat.desc function for the Height.m variable\n\n\n\n5.4.2 D.2. Multiple variables in one command\nWe can also use stat.desc() to calculate descriptive statistics for more than one variable at a time.\n\nEnter an object.name &lt;-. The object name can be of your choosing that will store output from the stat.desc() function.\n\n\n\nEnter the function stat.desc(Data[, c(\"Weight.kg\", \"Height.m\")]).\n\n\nstat.desc(): this calls the stat.desc function; all arguments must be made inside these parentheses.\nData: this is the name of the existing dataframe containing the variables to be described.\n[, c(\"variable1\", \"variable2\")]: similar to the syntax for the subset function (Module 1 Problem Set), we can use hard brackets to specify a group of observations and/or variables on which to run the function. Because we want to run the function on all observations, we use a comma after the first hard bracket. Next, we can use the list function c() as we did with the subset function in Module 1 Problem Set to identify all the variables we want summarized.\n\n\nHighlight the command and click Run. To view contents of the object in the console panel, highlight or type the object name and click Run. You can also use your keyboard shortcuts.\n\n\nmulticol_stats &lt;- stat.desc(Data[, c(\"Weight.kg\", \"Height.m\")])\n\nmulticol_stats\n\n                Weight.kg     Height.m\nnbr.val        30.0000000 30.000000000\nnbr.null        0.0000000  0.000000000\nnbr.na          0.0000000  0.000000000\nmin            51.3200000  1.700000000\nmax           118.3100000  1.970000000\nrange          66.9900000  0.270000000\nsum          2367.8700000 55.140000000\nmedian         73.6750000  1.815000000\nmean           78.9290000  1.838000000\nSE.mean         3.0309730  0.012405042\nCI.mean.0.95    6.1990358  0.025371159\nvar           275.6039197  0.004616552\nstd.dev        16.6013228  0.067945211\ncoef.var        0.2103324  0.036966927\n\n\n\n\n5.4.3 D.3. Calculate descriptive statistics for only one group of observations\nWe need to calculate descriptive statistics separately for each sample. There are different ways to do this in RStudio. This is where tidyverse pipelines come in handy!\nIn this dataset, we need to run descriptive statistics separately for each sex group (female, male, non-binary). Here, we will demonstrate the process for the non-binary sample.\n\nBegin the command by providing an object.name &lt;- for the new dataframe you will create. You can use an object name of your choosing.\nWe are going to use a pipeline %&gt;% series of commands. These will:\n\n\nStart with the Data object\nPass this through a filter command to select only certain data\n\nRemember - == means “is exactly equal to”\n\nPass this through a select command to remove non-numeric columns\nPass this through stat.desc to get our stats information.\n\n\nRun the command below. To view contents of the new dataframe in the console panel, highlight or type the new dataframe name and click Run or use your shortcuts.\n\n\nData %&gt;%                          # start with dataset\n  filter(Sex == \"Female\") %&gt;%     # select females\n  select(-Participant, -Sex) %&gt;%  # remove unneeded columns\n  stat.desc() %&gt;%                 # get stats\n  round(2)                        # round to two decimals\n\n             Weight.kg Height.m\nnbr.val          10.00    10.00\nnbr.null          0.00     0.00\nnbr.na            0.00     0.00\nmin              61.75     1.76\nmax              91.73     1.96\nrange            29.98     0.20\nsum             734.29    18.51\nmedian           71.85     1.86\nmean             73.43     1.85\nSE.mean           3.08     0.02\nCI.mean.0.95      6.97     0.05\nvar              95.03     0.00\nstd.dev           9.75     0.07\ncoef.var          0.13     0.04\n\n\n\nThere we go! We have been able to perform a series of complicated commands quickly, right in a row, by using the pipeline method. This allows us to see things step-by-step through the command, and to annotate appropriately.\nWe can save the above as an object by adding object.name &lt;- before the first Data.\n\n\nfemale_data &lt;- Data %&gt;%           # start with dataset\n  filter(Sex == \"Female\") %&gt;%     # select females\n  select(-Participant, -Sex) %&gt;%  # remove unneeded columns\n  stat.desc() %&gt;%                 # get stats\n  round(2)                        # round to two decimals\n\n26. To view this, just run female_data or use print(female_data).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#e.-create-a-new-variable",
    "href": "module2.html#e.-create-a-new-variable",
    "title": "2  Module 2",
    "section": "5.5 E. Create a new variable",
    "text": "5.5 E. Create a new variable\nAlthough the research team recorded the height and weight of each participant, they are really interested in the Body Mass Index (BMI) profile of participants. We can have R calculate BMI and add it to the Data dataframe as a new variable. There are separate formulas for calculating BMI depending on whether weight and height are in metric units or in English units; BMI will be the same from either formula. The formula for BMI calculated from weight and height in metric units is:\n\\[\nBMI = \\frac{mass}{height^2}\n\\]\n\nIn this step, how we name our new object matters! We need to tell RStudio the dataframe in which to put the new variable and the name we want it to give to the new variable. Enter the object name as: Data$BMI &lt;-.\n\n\nData: This identifies the dataframe to which we want the new variable added; in our case, this is named Data.\n$: Tells R that what comes next is the name of the new variable.\nBMI: This is the name of the new variable to be added to existing dataframe Data.\n\n28. Next enter the mathematical formula (see BMI equation above) for calculating BMI with reference to weight and height variables in the existing dataframe Data: Data$Weight.kg/(Data$Height.m^2).\n\nThis is also an example of how we can use R as a calculator.\nWhen entering equations, it is best to always use parentheses to ensure the correct order of operations (e.g., PEDMAS). For example: BMI of participant 2:\n\nshould be \\(\\frac{125.64}{1.922^2} = \\frac{125.64}{3.69} = 34.08\\)\nshould not be \\(\\frac{125.64}{1.92}^2 = 65.44^2 = 4282.07\\)\n\n\n29. Highlight the command and click Run.\n30. To view contents of the dataframe ‘Data’ showing the BMI variable added, highlight or type the object name ‘Data’ and click Run (Fig. 7).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#points-create-new-variables-in-the-dataframe-data-or-whatever-object-name-you-gave-the-imported-.csv-file-weight-and-height-in-english-units.",
    "href": "module2.html#points-create-new-variables-in-the-dataframe-data-or-whatever-object-name-you-gave-the-imported-.csv-file-weight-and-height-in-english-units.",
    "title": "2  Module 2",
    "section": "6.1 6. (6 points) Create new variables in the dataframe Data (or whatever object name you gave the imported *.csv file): weight and height in English units.",
    "text": "6.1 6. (6 points) Create new variables in the dataframe Data (or whatever object name you gave the imported *.csv file): weight and height in English units.\n\n6.1.1 a. You will be asked to insert an image or screenshot of the dataframe showing they have been added and correctly calculated.\n\n\n6.1.2 b. Conversions:\n\nWeight: \\(1 kg = 2.20462 lbs\\)\nHeight: \\(39.3701in = 1m\\)\n\n\n\n6.1.3 c. Coding how-to:\n\nData$Weight.lbs: Data$Weight.kg*2.20462\nData$Height.in: Data$Height.m*39.3701",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#points-use-the-stat.desc-function-to-calculate-descriptive-statistics-for-height.in-and-weight.lbs-separately-for-each-sample-female-male-nonbinary.",
    "href": "module2.html#points-use-the-stat.desc-function-to-calculate-descriptive-statistics-for-height.in-and-weight.lbs-separately-for-each-sample-female-male-nonbinary.",
    "title": "2  Module 2",
    "section": "6.2 7. (6 points) Use the stat.desc() function to calculate descriptive statistics for Height.in and Weight.lbs separately for each sample (Female, Male, NonBinary).",
    "text": "6.2 7. (6 points) Use the stat.desc() function to calculate descriptive statistics for Height.in and Weight.lbs separately for each sample (Female, Male, NonBinary).\n\n6.2.1 a. You will be asked to insert an image or screenshot of the output from the RStudio console window in Canvas.\n\n\n6.2.2 b. Hint: You will need to use skills from both the Module 1 and Module 2 portions of the problem set to complete this task in RStudio.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#points-look-at-your-r-scripts-from-module-1-and-module-2-portions-of-this-problem-set.-evaluate-how-well-you-did-or-did-not-follow-best-practices-for-documenting-your-workflows.-briefly-discuss-improvements-that-could-be-made-to-the-way-you-document-your-analysis-workflow-in-future-problem-sets-if-any",
    "href": "module2.html#points-look-at-your-r-scripts-from-module-1-and-module-2-portions-of-this-problem-set.-evaluate-how-well-you-did-or-did-not-follow-best-practices-for-documenting-your-workflows.-briefly-discuss-improvements-that-could-be-made-to-the-way-you-document-your-analysis-workflow-in-future-problem-sets-if-any",
    "title": "2  Module 2",
    "section": "6.3 8. (3 points) Look at your R scripts from Module 1 and Module 2 portions of this Problem Set. Evaluate how well you did or did not follow best practices for documenting your workflows. Briefly discuss improvements that could be made to the way you document your analysis workflow in future problem sets, if any?",
    "text": "6.3 8. (3 points) Look at your R scripts from Module 1 and Module 2 portions of this Problem Set. Evaluate how well you did or did not follow best practices for documenting your workflows. Briefly discuss improvements that could be made to the way you document your analysis workflow in future problem sets, if any?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module2.html#create-a-histogram-for-each-of-the-following-variables-in-the-sample-indicated",
    "href": "module2.html#create-a-histogram-for-each-of-the-following-variables-in-the-sample-indicated",
    "title": "2  Module 2",
    "section": "7.1 9. Create a histogram for each of the following variables in the sample indicated:",
    "text": "7.1 9. Create a histogram for each of the following variables in the sample indicated:\n\nFemale Weight.lbs\nMale Height.in\nNon-binary BMI\n\nCompare the histogram to the mean and median of the respective sample calculated using the stat.desc function for question 5 above. How, if at all, does the histogram illustrate the relationship of the mean to the median of that sample?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Module 2</span>"
    ]
  },
  {
    "objectID": "module3.html",
    "href": "module3.html",
    "title": "3  Module 3",
    "section": "",
    "text": "4 Learning objectives:\nTo continue gaining familiarity with the R statistical framework by using RStudio to:",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Module 3</span>"
    ]
  },
  {
    "objectID": "module3.html#dataset-1",
    "href": "module3.html#dataset-1",
    "title": "3  Module 3",
    "section": "6.1 Dataset 1",
    "text": "6.1 Dataset 1\nOur first dataset looks at the energetic costs associated with nesting in an Arctic seabird, the Common Eider Somateria mollissima (hoyvik_hilde_mind_2017?). These data represent the open-access permanent archive of a publication based on these data (Høyvik Hilde et al. 2016). The authors constructed artificial shelters around some nests to understand how it affected the physical condition of incubating female eiders. Note that I do a few steps below to (1) reduce the size of the data file and (2) rename columns to be more intuitive. All of these steps involve the tidyverse steps we’ve discussed before.\n\nbird_data &lt;- read_csv(\"https://zenodo.org/records/4960831/files/Data%20file.csv\") %&gt;% \n  # select columns of interest\n  select(`Nest ID`, Ring, MeanT, MeanW, MeanH, `Differ. Days`, \n         Mass, `Mass recapture`, CS, CSRecapture, `Shelter added (Y/N)`) %&gt;% \n  # rename columns\n  rename(Nest_ID = `Nest ID`, Bird_ID = Ring,\n         Mean_Temp = MeanT, Mean_Wind = MeanW, \n         Mean_Humid = MeanH, Days_between_captures = `Differ. Days`,\n         Mass_Initial = Mass, Mass_Recapture = `Mass recapture`,\n         Clutch_size_initial = CS, Clutch_size_recapture = CSRecapture,\n         Shelter_added = `Shelter added (Y/N)`)\n\nRows: 87 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): Nest ID, Shelter added (Y/N), COMMENTS, Shelter class\ndbl  (19): Year, MeanT, MeanW, Winddir, MeanH, Date capture, Date recapture,...\ntime  (2): Time deployed, Time retrieved\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Module 3</span>"
    ]
  },
  {
    "objectID": "module3.html#dataset-2",
    "href": "module3.html#dataset-2",
    "title": "3  Module 3",
    "section": "6.2 Dataset 2",
    "text": "6.2 Dataset 2\nOur second dataset relates to the effects of nitrogen on the growth of Scots Pine and Norway Spruce (Jetsonen et al. 2025). This is a dataset related to a publication on these trees and the volume they add that came out a year prior, and represents another open-access dataset (Jetsonen et al. 2024). Like dataset 1, we are going to select specific columns and rename them for this assignment.\n\ntree_data &lt;- read_csv(\"https://zenodo.org/records/14733005/files/N_fertilization_Finland_data.csv\") %&gt;% \n  select(tree, v_incr_annual_compare, FN, Pa, Tsum, SF) %&gt;% \n  rename(Tree_Species = tree, \n         Annual_Mean_Volume_Growth = v_incr_annual_compare,\n         Nitrogen_Dose = FN, Mean_Annual_Precipitation = Pa,\n         Long_term_temperature_sum = Tsum, time_since_fertilization = SF)\n\nRows: 165 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): tree, location, site_type\ndbl (13): article_id, GS, GM, GN, Tsum, Pa, FN, v_incr_annual_compare, SF, G...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Module 3</span>"
    ]
  },
  {
    "objectID": "module3.html#section-a.-calculate-mean-and-standard-deviation",
    "href": "module3.html#section-a.-calculate-mean-and-standard-deviation",
    "title": "3  Module 3",
    "section": "7.1 Section A. Calculate mean and standard deviation",
    "text": "7.1 Section A. Calculate mean and standard deviation\n\nCreate a new column for the difference in mass as a percent of the birds’ initial mass using the command mutate.\n\n\nbird_data &lt;- bird_data %&gt;% \n  mutate(Percent_mass_change = (Mass_Recapture - Mass_Initial)/Mass_Initial)\n\n\nCalculate the mean and standard deviation of the Percent_mass_change variable separately for whether the nest was or was not sheltered (Shelter_added; Y or N). First, we will calculate these “by hand” using the following equations:\n\n\\[\n\\bar{x}=\\frac{\\Sigma_1^n x}{n}\n\\]\n\\[\ns^2 = \\frac{\\Sigma_i^n (x_i - \\bar{x})^2}{n}\n\\]\nIn order to do this, we will need to write a function. A function is a specific R command that creates a pipeline for some sort of input data.\nIn writing these functions, it’s important to know that we can perform subtraction, multiplication, and other mathematical functions across multiple values as once. For example, if we want to know what \\(1\\) through \\(10\\) all \\(-5.5\\) are equal, we can do the following:\n\n# denote multiple numbers with :\nx &lt;- 1:10\n\nx - 5.5\n\n [1] -4.5 -3.5 -2.5 -1.5 -0.5  0.5  1.5  2.5  3.5  4.5\n\n\nWe can write our own functions in R that will perform these functions as follows:\n\nour_mean &lt;- function(x){\n  # get sum of input\n  sum_x &lt;- sum(x)\n  # calculate length of input\n  n &lt;- length(x)\n  # calculate mean\n  xbar &lt;- sum_x/n\n  # return mean to console\n  # necessary for saving outside function\n  return(xbar)\n}\n\nour_sd &lt;- function(x){\n  # need to calculate mean first!\n  # copied from above\n  # get sum of input\n  sum_x &lt;- sum(x)\n  # calculate length of input\n  n &lt;- length(x)\n  # calculate mean\n  xbar &lt;- sum_x/n\n  \n  # calculate deviants\n  deviants &lt;- x - xbar\n  deviants_sq &lt;- deviants^2\n  our_variance &lt;- sum(deviants_sq)/n\n  our_sd &lt;- sqrt(our_variance)\n  # return answer\n  return(our_sd)\n}\n\n\nRemember, we can use select to get a specific set of data from a dataframe in R. I will calculate these metrics for one set of variables here:\n\n\n# filter data\nno_shelter_change &lt;- bird_data %&gt;% \n  # get non-sheltered birds\n  filter(Shelter_added == \"N\")\n\n# extract data of interest ONLY\nno_shelter_mass_change &lt;- no_shelter_change$Percent_mass_change\n\n# view first few values\nhead(no_shelter_mass_change)\n\n[1] -0.1914894 -0.1958763 -0.1978022 -0.1956522 -0.2234043 -0.2134831\n\n\n\nNow that we have our data subsetted, we can calculate “by hand”.\n\n\nour_mean(no_shelter_mass_change)\n\n[1] -0.2068213\n\n\n\nour_sd(no_shelter_mass_change)\n\n[1] 0.02416277\n\n\n\nNow, calculate the following for individuals with shelters. Your answers should be as follows:\n\n\nour_mean(shelter_mass_change)\n\n[1] -0.1957889\n\n\n\nour_sd(shelter_mass_change)\n\n[1] 0.0223379\n\n\n\nNow, let’s compare our answers to those calculated by R. These values may differ slightly based on rounding in R, but should be very close. Remember - you can use the same objects that we used before if they are still stored in your memory!\n\n\nmean(no_shelter_mass_change)\n\n[1] -0.2068213\n\n\n\nsd(no_shelter_mass_change)\n\n[1] 0.02435685",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Module 3</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Høyvik Hilde, C., C. Pélabon, L. Guéry, G. W. Gabrielsen, and S.\nDescamps (2016). Mind the\nwind: Microclimate effects on incubation effort of an arctic\nseabird. Ecology and Evolution 6:1914–1921.\n\n\nJetsonen, J. T., A. Lauren, H. Peltola, K. E. M. Laurén, S. Launiainen,\nand M. Palviainen (2025). Volume growth responses of Scots\npine and Norway spruce to nitrogen fertilization:\nQuantitative synthesis of fertilization experiments in\nFinland. [Online.] Available at https://zenodo.org/records/14733005.\n\n\nJetsonen, J., A. Laurén, H. Peltola, O. Muhonen, J. Nevalainen, V.-P.\nIkonen, A. Kilpeläinen, E.-S. Tuittila, E. Männistö, N. Kokkonen, and M.\nPalviainen (2024). Effects\nof nitrogen fertilization on the ground vegetation cover and soil\nchemical properties in Scots pine and Norway\nspruce stands. Silva Fennica 58.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "module5.html",
    "href": "module5.html",
    "title": "3  Module 5",
    "section": "",
    "text": "4 Quick note\nThe rest of the site will be updated, but there is a “native” pipe operator in R that does not require the installation of tidyverse! It is |&gt;. You can also have this come up by clicking CTRL+SHIFT+M on any operating system by enabling it on your computer. Go to Global Options (under the Tools tab on my computer at the top) and click on the Code section. On the first page, there should be a box for clicking “Use native pipe operator” or something to that effect. Click this box, and now you are good to go!\nCompare the following chunks of code; both do the same thing, but using the pipe operator to “pass” things through the next command makes things easier.\nset.seed(42)\n\n# get pseudorandom set of 100 numbers\nx &lt;- rnorm(100)\n\nround(mean(x),2)\n\n[1] 0.03\nx |&gt; \n  mean() |&gt; \n  round(2)\n\n[1] 0.03\nNow, back to the module…",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Module 5</span>"
    ]
  },
  {
    "objectID": "module5.html#extra-credit-opportunity",
    "href": "module5.html#extra-credit-opportunity",
    "title": "3  Module 5",
    "section": "7.1 Extra credit opportunity",
    "text": "7.1 Extra credit opportunity\n\nComplete Assignment Problem about research in Tikal National Park, Guatemala, in Chapter 6 of Whitlock and Schluter (Q20 in \\(2^{nd}\\) edition; Q21 in \\(3^{rd}\\) edition). (+1 pt possible)\n\nIn Canvas, each species in the table associated with this question will be listed and you will be asked to indicate if that species demonstrated a statistically significant reduction, increase, or no difference in density near ruins compared to far from ruins based on information provided in that table (equivalent to parts a-c). You will also be asked to select the species showing the strongest evidence for an effect of distance from ruins (equivalent to part d).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Module 5</span>"
    ]
  },
  {
    "objectID": "citations.html",
    "href": "citations.html",
    "title": "4  Rounding and Citations",
    "section": "",
    "text": "5 Rounding\nIn this class, we are going to follow basic rounding rules formatting used for some publications. Specifically, this is based on the guidelines for Ornithology (formerly, The Auk) and Ornithology Applications (formerly, The Condor).\nWhen we are rounding data from different datasets, we need to round data to the same number of decimal points as the data we started with. Importantly, we need to do the rounding at the end, and not round earlier in the pipeline. We can easily round with the round command, as follows.\n\nx &lt;- 3.14157\n\nround(x, 2)\n\n[1] 3.14\n\n\nThe following accomplishes the same thing, but with tidyverse installed.\n\n# always enable tidyverse before using commands!\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nx %&gt;% \n  round(2)\n\n[1] 3.14\n\n\n\n\n6 Citations\nCitations need to include:\n\nAuthor\nYear\nTitle\nJournal\nVolume\nIssue (if available)\nPage numbers (or article number)\nDOI (when available)\n\nI will be formatting citations on this site per the guidelines for Ornithology (formerly The Auk). You can view example citations on the references page.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Rounding and Citations</span>"
    ]
  }
]